@model ProductCategory.Models.PaginatedList<ProductCategory.Models.Producto>

@{
    ViewData["Title"] = "Productos";
}

<h1>Listado de Productos</h1>

<p>
    <a asp-action="Create" class="btn btn-success" Create">Crear Nuevo</a>
</p>
<div class="row mb-4">
    <div class="col-md-6">
        <form asp-action="Search" method="get" class="input-group">
            <input type="text" name="searchString" class="form-control"
                   placeholder="Buscar por nombre o descripción..."
                   value="@ViewBag.SearchString" />
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-search"></i> Buscar
            </button>
            @if (!string.IsNullOrEmpty(ViewBag.SearchString as string))
            {
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-times"></i> Limpiar
                </a>
            }
        </form>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Precio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].FechaCreacion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Categoria)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaCreacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Categoria.Nombre)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Editar</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Detalles</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Eliminar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="d-flex justify-content-between">
    <div>
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-pageSize="@Model.PageSize"
           class="btn btn-primary @prevDisabled">
            Anterior
        </a>
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-pageSize="@Model.PageSize"
           class="btn btn-primary @nextDisabled">
            Siguiente
        </a>
    </div>
    <div>
        <span>Página @Model.PageIndex de @Model.TotalPages</span>
    </div>
    <div>
        <span>Mostrando @Model.FirstItemOnPage a @Model.LastItemOnPage de @Model.TotalItems productos</span>
    </div>
</div>


@if (!string.IsNullOrEmpty(ViewBag.SearchString as string))
{
    <div class="alert alert-info mb-3">
        <strong>@ViewBag.ResultCount</strong> resultados para: <strong>"@ViewBag.SearchString"</strong>
    </div>
}